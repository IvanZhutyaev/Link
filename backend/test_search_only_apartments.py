#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ø–æ–∏—Å–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy.orm import Session
from Database.DB_connection import get_db
from Models.All_models import Property, ResidentialComplex, Law_Face
from Cruds.Property_crud import search_properties, get_properties
from Schemas.Property_schema import PropertySearch

def test_search_only_apartments():
    """–¢–µ—Å—Ç, —á—Ç–æ –ø–æ–∏—Å–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    db = next(get_db())
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
        developer = Law_Face(
            Company_name="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫",
            INN=1234567891,
            OGRN=1234567890124,
            Adress="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å",
            User_name="test_developer2",
            password="password123"
        )
        db.add(developer)
        db.commit()
        db.refresh(developer)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ñ–ö
        complex_obj = ResidentialComplex(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –ñ–ö 2",
            address="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –ñ–ö 2",
            developer_name="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫",
            zastroy_id=developer.id,
            city="–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥",
            commissioning_date="2025",
            housing_class="–ö–æ–º—Ñ–æ—Ä—Ç",
            status="–°—Ç—Ä–æ–∏—Ç—Å—è"
        )
        db.add(complex_obj)
        db.commit()
        db.refresh(complex_obj)
        
        # –°–æ–∑–¥–∞–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—É (—Å complex_id)
        apartment = Property(
            name="–ö–≤–∞—Ä—Ç–∏—Ä–∞ 2",
            address="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å, –∫–≤. 2",
            price=6000000,
            city="–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥",
            is_available=True,
            zastroy_id=developer.id,
            complex_id=complex_obj.id,
            area=85.5,
            rooms=3,
            floor=7
        )
        db.add(apartment)
        db.commit()
        db.refresh(apartment)
        
        # –°–æ–∑–¥–∞–µ–º –ñ–ö –∫–∞–∫ –æ–±—ä–µ–∫—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (–±–µ–∑ complex_id)
        complex_as_property = Property(
            name="–ñ–ö –∫–∞–∫ –æ–±—ä–µ–∫—Ç 2",
            address="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –ñ–ö 2",
            price=200000000,
            city="–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥",
            is_available=True,
            zastroy_id=developer.id,
            # complex_id = None (–ñ–ö)
            area=2000.0,
            rooms=200,
            floor=1
        )
        db.add(complex_as_property)
        db.commit()
        db.refresh(complex_as_property)
        
        print(f"–°–æ–∑–¥–∞–Ω—ã –æ–±—ä–µ–∫—Ç—ã:")
        print(f"- –ö–≤–∞—Ä—Ç–∏—Ä–∞ ID: {apartment.id}, complex_id: {apartment.complex_id}")
        print(f"- –ñ–ö –∫–∞–∫ –æ–±—ä–µ–∫—Ç ID: {complex_as_property.id}, complex_id: {complex_as_property.complex_id}")
        
        # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã)
        print("\n=== –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ===")
        search_params = PropertySearch()
        results = search_properties(db, search_params)
        print(f"–ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(results)}")
        for prop in results:
            print(f"- {prop.name} (ID: {prop.id}, complex_id: {prop.complex_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - —ç—Ç–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã
        all_apartments = all(prop.complex_id is not None for prop in results)
        if all_apartments:
            print("‚úÖ –¢–µ—Å—Ç 1 –ü–†–û–ô–î–ï–ù: –ü–æ–∏—Å–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
        else:
            print("‚ùå –¢–µ—Å—Ç 1 –ü–†–û–í–ê–õ–ï–ù: –ü–æ–∏—Å–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∫–∞–∑–∞–ª –Ω–µ —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
        
        # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Å complex_id='any' (–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã)
        print("\n=== –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Å complex_id='any' ===")
        search_params = PropertySearch(complex_id='any')
        results = search_properties(db, search_params)
        print(f"–ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(results)}")
        for prop in results:
            print(f"- {prop.name} (ID: {prop.id}, complex_id: {prop.complex_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - —ç—Ç–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã
        all_apartments = all(prop.complex_id is not None for prop in results)
        if all_apartments:
            print("‚úÖ –¢–µ—Å—Ç 2 –ü–†–û–ô–î–ï–ù: –ü–æ–∏—Å–∫ —Å complex_id='any' –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
        else:
            print("‚ùå –¢–µ—Å—Ç 2 –ü–†–û–í–ê–õ–ï–ù: –ü–æ–∏—Å–∫ —Å complex_id='any' –ø–æ–∫–∞–∑–∞–ª –Ω–µ —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
        
        # –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º complex_id
        print("\n=== –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º complex_id ===")
        search_params = PropertySearch(complex_id=str(complex_obj.id))
        results = search_properties(db, search_params)
        print(f"–ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(results)}")
        for prop in results:
            print(f"- {prop.name} (ID: {prop.id}, complex_id: {prop.complex_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ñ–ö
        all_in_complex = all(prop.complex_id == complex_obj.id for prop in results)
        if all_in_complex:
            print("‚úÖ –¢–µ—Å—Ç 3 –ü–†–û–ô–î–ï–ù: –ü–æ–∏—Å–∫ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º complex_id –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã —Ç–æ–ª—å–∫–æ –∏–∑ —ç—Ç–æ–≥–æ –ñ–ö")
        else:
            print("‚ùå –¢–µ—Å—Ç 3 –ü–†–û–í–ê–õ–ï–ù: –ü–æ–∏—Å–∫ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º complex_id –ø–æ–∫–∞–∑–∞–ª –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ –∏–∑ —ç—Ç–æ–≥–æ –ñ–ö")
        
        # –¢–µ—Å—Ç 4: –§—É–Ω–∫—Ü–∏—è get_properties –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        print("\n=== –¢–µ—Å—Ç 4: get_properties –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ===")
        results = get_properties(db)
        print(f"–ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {len(results)}")
        for prop in results:
            print(f"- {prop.name} (ID: {prop.id}, complex_id: {prop.complex_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - —ç—Ç–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã
        all_apartments = all(prop.complex_id is not None for prop in results)
        if all_apartments:
            print("‚úÖ –¢–µ—Å—Ç 4 –ü–†–û–ô–î–ï–ù: get_properties –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
        else:
            print("‚ùå –¢–µ—Å—Ç 4 –ü–†–û–í–ê–õ–ï–ù: get_properties –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∫–∞–∑–∞–ª –Ω–µ —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    test_search_only_apartments() 