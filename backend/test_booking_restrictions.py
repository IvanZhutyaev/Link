#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã, –∞ –Ω–µ –ñ–ö
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy.orm import Session
from Database.DB_connection import get_db
from Models.All_models import Property, ResidentialComplex, Law_Face
from Cruds.Property_crud import create_booking
from Schemas.Property_schema import BookingModel

def test_booking_restrictions():
    """–¢–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    db = next(get_db())
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
        developer = Law_Face(
            Company_name="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫",
            INN=1234567890,
            OGRN=1234567890123,
            Adress="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å",
            User_name="test_developer",
            password="password123"
        )
        db.add(developer)
        db.commit()
        db.refresh(developer)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ñ–ö
        complex_obj = ResidentialComplex(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –ñ–ö",
            address="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –ñ–ö",
            developer_name="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫",
            zastroy_id=developer.id,
            city="–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥",
            commissioning_date="2025",
            housing_class="–ö–æ–º—Ñ–æ—Ä—Ç",
            status="–°—Ç—Ä–æ–∏—Ç—Å—è"
        )
        db.add(complex_obj)
        db.commit()
        db.refresh(complex_obj)
        
        # –°–æ–∑–¥–∞–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—É (—Å complex_id)
        apartment = Property(
            name="–ö–≤–∞—Ä—Ç–∏—Ä–∞ 1",
            address="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å, –∫–≤. 1",
            price=5000000,
            city="–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥",
            is_available=True,
            zastroy_id=developer.id,
            complex_id=complex_obj.id,
            area=75.5,
            rooms=2,
            floor=5
        )
        db.add(apartment)
        db.commit()
        db.refresh(apartment)
        
        # –°–æ–∑–¥–∞–µ–º –ñ–ö –∫–∞–∫ –æ–±—ä–µ–∫—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (–±–µ–∑ complex_id)
        complex_as_property = Property(
            name="–ñ–ö –∫–∞–∫ –æ–±—ä–µ–∫—Ç",
            address="–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –ñ–ö",
            price=100000000,
            city="–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥",
            is_available=True,
            zastroy_id=developer.id,
            # complex_id = None (–ñ–ö)
            area=1000.0,
            rooms=100,
            floor=1
        )
        db.add(complex_as_property)
        db.commit()
        db.refresh(complex_as_property)
        
        # –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É (–¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å)
        try:
            booking_data = BookingModel(property_id=apartment.id)
            result = create_booking(db, user_id=1, booking_data=booking_data)
            print("‚úÖ –¢–µ—Å—Ç 1 –ü–†–û–ô–î–ï–ù: –ö–≤–∞—Ä—Ç–∏—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç 1 –ü–†–û–í–ê–õ–ï–ù: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É - {e}")
        
        # –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ñ–ö (–¥–æ–ª–∂–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)
        try:
            booking_data = BookingModel(property_id=complex_as_property.id)
            result = create_booking(db, user_id=1, booking_data=booking_data)
            print("‚ùå –¢–µ—Å—Ç 2 –ü–†–û–í–ê–õ–ï–ù: –ñ–ö –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω, —Ö–æ—Ç—è –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª")
        except ValueError as e:
            if "–ú–æ–∂–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã" in str(e):
                print("‚úÖ –¢–µ—Å—Ç 2 –ü–†–û–ô–î–ï–ù: –ñ–ö –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å (–æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)")
            else:
                print(f"‚ùå –¢–µ—Å—Ç 2 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ - {e}")
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç 2 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ - {e}")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    test_booking_restrictions() 